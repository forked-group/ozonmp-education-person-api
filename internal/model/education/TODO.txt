- null and zero value behavior
    Если получаем null, то no-op RTFM
    Если получаем zero, то всегда устанавливаем zero
    Если имеем zero и оно трактуется, как "нет значения", то ничего не отдаем (omitempty), в случае если это невозможно - null
    В качестве zero принимаем или 0 или пустую строку `""` или строку содержащую литерал, закрепленный за zero этого типа.
    Нужно ли добавлять это поведение в String/Parse или только в MarshalJSON/UnmarshalJSON?
    Возможно вылезут неоднозначности в MarshalText/UnmarshalText

    А что делать со структурными типами {} []? Т.е. что нужно сделать, чтобы удалить такое поле?
    Если придет null, мы ничего не меняем no-op RTFM. Если придет {}, т.е. все поля null - опять ничего не меняем.
    Посылать 0 или "" выглядит криво, но будет работать... брр...
    Как люди решают этот вопрос?

    у нас есть модель:
    type Person struct {
        ID        uint64 `json:id`
        FirstName string `json:"first_name"`
        LastName  string `json:"last_name"`
        Birthday  Date   `json:"birthday`
    }

    к на прилетает PATCH:
    {
        "person_id":314,
        "person":{
            last_name:"Вася"
        }
    }

    Что нужно делать в базе? Кажется логичным:

    UPDATE person SET last_name='Вася' WHERE person_id=314




