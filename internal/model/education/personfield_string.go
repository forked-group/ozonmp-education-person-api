// Code generated by "stringer -type=PersonField"; DO NOT EDIT.

package education

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PersonID-1]
	_ = x[PersonFirstName-2]
	_ = x[PersonMiddleName-4]
	_ = x[PersonLastName-8]
	_ = x[PersonBirthday-16]
	_ = x[PersonSex-32]
	_ = x[PersonEducation-64]
	_ = x[PersonRemoved-128]
	_ = x[PersonCreated-256]
	_ = x[PersonUpdated-512]
}

const (
	_PersonField_name_0 = "PersonIDPersonFirstName"
	_PersonField_name_1 = "PersonMiddleName"
	_PersonField_name_2 = "PersonLastName"
	_PersonField_name_3 = "PersonBirthday"
	_PersonField_name_4 = "PersonSex"
	_PersonField_name_5 = "PersonEducation"
	_PersonField_name_6 = "PersonRemoved"
	_PersonField_name_7 = "PersonCreated"
	_PersonField_name_8 = "PersonUpdated"
)

var (
	_PersonField_index_0 = [...]uint8{0, 8, 23}
)

func (i PersonField) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PersonField_name_0[_PersonField_index_0[i]:_PersonField_index_0[i+1]]
	case i == 4:
		return _PersonField_name_1
	case i == 8:
		return _PersonField_name_2
	case i == 16:
		return _PersonField_name_3
	case i == 32:
		return _PersonField_name_4
	case i == 64:
		return _PersonField_name_5
	case i == 128:
		return _PersonField_name_6
	case i == 256:
		return _PersonField_name_7
	case i == 512:
		return _PersonField_name_8
	default:
		return "PersonField(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
